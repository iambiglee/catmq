<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baracklee.mq.biz.dal.meta.ConsumerRepository">
    <!-- 业务逻辑sql请写在这个文件内 -->
    <insert id="register"
            parameterType="com.baracklee.mq.biz.entity.ConsumerEntity"
            useGeneratedKeys="true" keyProperty="id">
        insert into consumer (
            ip,
            name,
            consumer_group_names,
            sdk_version,
            lan,
            heart_time
        )values(
                   #{ip},
                   #{name},
                   #{consumerGroupNames},
                   #{sdkVersion},
                   #{lan},
                   current_timestamp
               )
    </insert>
    <update id="heartbeat">
        update consumer set heart_time=CURRENT_TIMESTAMP where id in
        (
        <foreach collection="ids" item="item" index="index" separator=",">
            ${item}
        </foreach>
        )
    </update>

    <select id="findByHeartTimeInterval" parameterType="java.lang.Long" resultMap="BaseResultMap">
		<![CDATA[
        select * from consumer where heart_time < TIMESTAMPADD(second, -#{heartTimeInterval}, current_timestamp )
        ]]>
	</select>

    <delete id="deleteByConsumerId" parameterType="java.lang.Long">
        delete from consumer
        where id = #{consumerId}
    </delete>

    <select id="getConsumerByConsumerGroupId" resultMap="BaseResultMap"
            useCache="false">
        select *
        from consumer where
                id in (select consumer_id from consumer_group_consumer where consumer_group_id=#{consumerGroupId}) limit 1
    </select>

    <select id="countBy" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1)
        from consumer
        <where>
            1=1
            <if test="id != null and id !=''" >
                and `id` = #{id}
            </if>
            <if test="ip != null and ip !=''" >
                and `ip` = #{ip}
            </if>
            <if test="name != null and name !=''" >
                and `name` = #{name}
            </if>
            <if test="consumerGroupNames != null and consumerGroupNames !=''" >
                and `consumer_group_names` = #{consumerGroupNames}
            </if>
            <if test="sdkVersion != null and sdkVersion !=''" >
                and `sdk_version` ${sdkVersion}
            </if>
            <if test="lan != null and lan !=''" >
                and `lan` = #{lan}
            </if>
            <if test="heartTime != null and heartTime !=''" >
                and `heart_time` = #{heartTime}
            </if>
            <if test="insertBy != null and insertBy !=''" >
                and `insert_by` = #{insertBy}
            </if>
            <if test="insertTime != null and insertTime !=''" >
                and `insert_time` = #{insertTime}
            </if>
            <if test="updateBy != null and updateBy !=''" >
                and `update_by` = #{updateBy}
            </if>
            <if test="updateTime != null and updateTime !=''" >
                and `update_time` = #{updateTime}
            </if>
            <if test="isActive != null and isActive !=''" >
                and `is_active` = #{isActive}
            </if>

            <if test="updateTimeStart != null and updateTimeStart !=''" >
                and update_time >= #{updateTimeStart}
            </if>
            <if test="updateTimeEnd != null and updateTimeEnd !=''" >
                and update_time <![CDATA[ <= ]]> #{updateTimeEnd}
            </if>
            <if test="insertTimeStart != null and insertTimeStart !=''" >
                and insert_time >= #{insertTimeStart}
            </if>
            <if test="insertTimeEnd != null and insertTimeEnd !=''" >
                and insert_time <![CDATA[ <= ]]> #{insertTimeEnd}
            </if>
            <if test="heartBeat != null and heartBeat !='' and heartBeat==1 and consumerCheckInterval!=null and consumerCheckInterval!=''" >
                and heart_time <![CDATA[ > ]]> TIMESTAMPADD(second, -#{consumerCheckInterval}*1000, current_timestamp )
            </if>

            <if test="heartBeat != null and heartBeat !='' and heartBeat==2 and consumerCheckInterval!=null and consumerCheckInterval!=''" >
                and heart_time <![CDATA[ <= ]]> TIMESTAMPADD(second, -#{consumerCheckInterval}*1000, current_timestamp )
            </if>
        </where>
    </select>

    <select id="getListBy" parameterType="java.util.Map" resultMap="BaseResultMap">
        select *
        from consumer
        <where>
            1=1
            <if test="id != null and id !=''" >
                and `id` = #{id}
            </if>
            <if test="ip != null and ip !=''" >
                and `ip` = #{ip}
            </if>
            <if test="name != null and name !=''" >
                and `name` = #{name}
            </if>
            <if test="consumerGroupNames != null and consumerGroupNames !=''" >
                and `consumer_group_names`  like '%${consumerGroupNames}%'
            </if>
            <if test="sdkVersion != null and sdkVersion !=''" >
                and `sdk_version` ${sdkVersion}
            </if>
            <if test="lan != null and lan !=''" >
                and `lan` = #{lan}
            </if>
            <if test="heartTime != null and heartTime !=''" >
                and `heart_time` = #{heartTime}
            </if>
            <if test="insertBy != null and insertBy !=''" >
                and `insert_by` = #{insertBy}
            </if>
            <if test="insertTime != null and insertTime !=''" >
                and `insert_time` = #{insertTime}
            </if>
            <if test="updateBy != null and updateBy !=''" >
                and `update_by` = #{updateBy}
            </if>
            <if test="updateTime != null and updateTime !=''" >
                and `update_time` = #{updateTime}
            </if>
            <if test="isActive != null and isActive !=''" >
                and `is_active` = #{isActive}
            </if>

            <if test="updateTimeStart != null and updateTimeStart !=''" >
                and update_time >= #{updateTimeStart}
            </if>
            <if test="updateTimeEnd != null and updateTimeEnd !=''" >
                and update_time <![CDATA[ <= ]]> #{updateTimeEnd}
            </if>
            <if test="insertTimeStart != null and insertTimeStart !=''" >
                and insert_time >= #{insertTimeStart}
            </if>
            <if test="insertTimeEnd != null and insertTimeEnd !=''" >
                and insert_time <![CDATA[ <= ]]> #{insertTimeEnd}
            </if>
            <if test="heartBeat != null and heartBeat !='' and heartBeat==1 and consumerCheckInterval!=null and consumerCheckInterval!=''" >
                and heart_time <![CDATA[ > ]]> TIMESTAMPADD(second, -#{consumerCheckInterval}*1000, current_timestamp )
            </if>

            <if test="heartBeat != null and heartBeat !='' and heartBeat==2 and consumerCheckInterval!=null and consumerCheckInterval!=''" >
                and heart_time <![CDATA[ <= ]]> TIMESTAMPADD(second, -#{consumerCheckInterval}*1000, current_timestamp )
            </if>
        </where>
        order by id desc
        limit #{start1}, #{offset1}
    </select>
</mapper>
