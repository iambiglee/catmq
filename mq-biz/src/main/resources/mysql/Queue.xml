<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baracklee.mq.biz.dal.meta.QueueRepository">
	<!-- 业务逻辑sql请写在这个文件内 -->
	<resultMap id="LastUpdateMap"
		type="com.baracklee.mq.biz.entity.LastUpdateEntity">
		<result column="lastDate" property="lastDate" />
		<result column="maxId" property="maxId" />
		<result column="count" property="count" />
	</resultMap>

	<resultMap id="BaseResultMap"
			   type="com.baracklee.mq.biz.entity.QueueEntity">
		<result column="id" property="id"/>
		<result column="topic_id" property="topicId"/>
		<result column="topic_name" property="topicName"/>
		<result column="db_node_id" property="dbNodeId"/>
		<result column="node_type" property="nodeType"/>
		<result column="ip" property="ip"/>
		<result column="db_name" property="dbName"/>
		<result column="tb_name" property="tbName"/>
		<result column="read_only" property="readOnly"/>
		<result column="min_id" property="minId"/>
		<result column="insert_by" property="insertBy"/>
		<result column="insert_time" property="insertTime"/>
		<result column="update_by" property="updateBy"/>
		<result column="update_time" property="updateTime"/>
		<result column="is_active" property="isActive"/>
		<result column="lock_version" property="lockVersion"/>
		<result column="meta_update_time" property="metaUpdateTime"/>

	</resultMap>


	<select id="getLastUpdate" resultMap="LastUpdateMap"
		useCache="false">
		select max(meta_update_time) as lastDate,max(id) as maxId ,count(1) as `count` from queue
	</select>
	<select id="getAllLocated" resultMap="BaseResultMap">
		select *
		from queue where topic_id>0
	</select>	
	<select id="getAllBasic" resultMap="BaseResultMap">
		select id, topic_id, topic_name, db_node_id, node_type, ip, db_name, tb_name, `read_only`, min_id, lock_version,update_time
		from queue where topic_id>0
	</select>
	
	<select id="getTopUndistributedNodes" parameterType="java.util.Map"
		resultMap="BaseResultMap" useCache="false">
		select db_node_id,ip from queue
		where node_type = #{nodeType}
		and topic_id = 0
		and db_node_id in (
		<foreach collection="nodeIds" item="item" index="index"
			separator=",">#{item}</foreach>
		)
		group by db_node_id,ip
		having count(*) > 0
		order by count(*)
		desc	
	</select>


	<select id="getTopDistributedNodes" parameterType="java.util.Map"
		resultType="java.lang.Long" useCache="false">
		select db_node_id from queue
		WHERE db_node_id in (
		select db_node_id from queue
		WHERE topic_id = #{topicId}
		group by db_node_id
		)
		and topic_id != 0
		group by db_node_id
		order by count(*)
		desc
	</select>

	<select id="getUndistributedListByNodeIds" resultMap="BaseResultMap"
		useCache="false">
		select *
		from queue where db_node_id in
		(
		<foreach collection="nodeIds" item="item" index="index"
			separator=",">#{item}</foreach>
		) and topic_id = 0 and node_type = #{nodeType}
	</select>

	<select id="getDistributedList" resultMap="BaseResultMap"
		useCache="false">
		select *
		from queue where db_node_id in
		(
		<foreach collection="nodeIds" item="item" index="index"
			separator=",">#{item}</foreach>
		) and topic_id = #{topicId}
	</select>

	<update id="updateWithLock" parameterType="com.baracklee.mq.biz.entity.QueueEntity">
		update queue set
		topic_id = #{topicId},
		topic_name = #{topicName},
		db_node_id = #{dbNodeId},
		node_type = #{nodeType},
		ip = #{ip},
		db_name = #{dbName},
		tb_name = #{tbName},
		read_only = #{readOnly},
		min_id = #{minId},
		insert_by = #{insertBy},
		update_by = #{updateBy},
		is_active = #{isActive},
		lock_version = #{lockVersion} + 1,
		meta_update_time = current_timestamp
		where id = #{id}
		and lock_version = #{lockVersion}
	</update>
	
	<update id="updateMinId">
	 <![CDATA[
		update queue set min_id = #{minId}	where id = #{id} and min_id < #{minId}
		]]>
	</update>

	<update id="updateForDbNodeChange">
		update queue set
		ip = #{ip},
		db_name = #{dbName},
		meta_update_time = current_timestamp
		<where>
			and ip = #{oldIp}
			and db_name = #{oldDbName}
			and is_active = 0
		</where>
	</update>

	<select id="countTopicByNodeId" resultType="com.baracklee.mq.biz.dto.AnalyseDto">
		SELECT
		topic_id topicId,
		topic_name topicName,
		COUNT(DISTINCT topic_id, db_node_id) quantity
		from queue
		where topic_id in
		(SELECT topic_id FROM queue WHERE db_node_id = #{id} AND topic_id &lt;&gt; 0)
		GROUP BY topic_id, topic_name
		ORDER BY quantity
		limit #{start}, #{offset}
	</select>

	<select id="getDistributedNodes" resultType="com.baracklee.mq.biz.dto.AnalyseDto">
		SELECT DISTINCT topic_id topicId, db_node_id dbNodeId, ip, db_name dbName
		from queue
		where topic_id in
		(SELECT topic_id FROM queue WHERE db_node_id = #{dbNodeId} AND topic_id
		&lt;&gt; 0)
	</select>

	<select id="getQueueQuantity" resultType="com.baracklee.mq.biz.dto.AnalyseDto">
		SELECT
		a.topic_id topicId, a.queueQuantity, b.writeableQueueQuantity
		FROM
		(
		SELECT topic_id, count(1) queueQuantity
		FROM queue
		WHERE topic_id &lt;&gt; 0
		GROUP BY topic_id
		) a
		LEFT JOIN (
		SELECT topic_id,count(1) writeableQueueQuantity
		FROM queue q
		WHERE q.topic_id &lt;&gt; 0 AND q.read_only = 1
		GROUP BY topic_id
		) b ON a.topic_id = b.topic_id
	</select>

	<select id="getListBy" parameterType="java.util.Map" resultMap="BaseResultMap">
		select *
		from queue
		<where>
			1=1
			<if test="id != null and id !=''" >
				and `id` = #{id}
			</if>
			<if test="topicId != null and topicId !=''" >
				and `topic_id` = #{topicId}
			</if>
			<if test="topicName != null and topicName !=''" >
				and `topic_name` = #{topicName}
			</if>
			<if test="dbNodeId != null and dbNodeId !=''" >
				and `db_node_id` = #{dbNodeId}
			</if>
			<if test="nodeType != null and nodeType !=''" >
				and `node_type` = #{nodeType}
			</if>
			<if test="ip != null and ip !=''" >
				and `ip` = #{ip}
			</if>
			<if test="dbName != null and dbName !=''" >
				and `db_name` = #{dbName}
			</if>
			<if test="tbName != null and tbName !=''" >
				and `tb_name` = #{tbName}
			</if>
			<if test="readOnly != null and readOnly !=''" >
				and `read_only` = #{readOnly}
			</if>
			<if test="minId != null and minId !=''" >
				and `min_id` = #{minId}
			</if>
			<if test="insertBy != null and insertBy !=''" >
				and `insert_by` = #{insertBy}
			</if>
			<if test="insertTime != null and insertTime !=''" >
				and `insert_time` = #{insertTime}
			</if>
			<if test="updateBy != null and updateBy !=''" >
				and `update_by` = #{updateBy}
			</if>
			<if test="updateTime != null and updateTime !=''" >
				and `update_time` = #{updateTime}
			</if>
			<if test="isActive != null and isActive !=''" >
				and `is_active` = #{isActive}
			</if>
			<if test="lockVersion != null and lockVersion !=''" >
				and `lock_version` = #{lockVersion}
			</if>
			<if test="metaUpdateTime != null and metaUpdateTime !=''" >
				and `meta_update_time` = #{metaUpdateTime}
			</if>

			<if test="updateTimeStart != null and updateTimeStart !=''" >
				and update_time >= #{updateTimeStart}
			</if>
			<if test="updateTimeEnd != null and updateTimeEnd !=''" >
				and update_time <![CDATA[ <= ]]> #{updateTimeEnd}
			</if>
			<if test="insertTimeStart != null and insertTimeStart !=''" >
				and insert_time >= #{insertTimeStart}
			</if>
			<if test="insertTimeEnd != null and insertTimeEnd !=''" >
				and insert_time <![CDATA[ <= ]]> #{insertTimeEnd}
			</if>
			<if test="distributeType == 1" >
				and topic_name != ''
			</if>
			<if test="distributeType == 2" >
				and (topic_name = null or topic_name = '')
			</if>
			<if test="distributeType == 3" >
				and topic_name ='MQ_NEED_DELETE_1111111'
			</if>
		</where>
		order by id desc
		limit #{start1}, #{offset1}
	</select>

	<select id="countBy" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(1)
		from queue
		<where>
			1=1
			<if test="id != null and id !=''" >
				and `id` = #{id}
			</if>
			<if test="topicId != null and topicId !=''" >
				and `topic_id` = #{topicId}
			</if>
			<if test="topicName != null and topicName !=''" >
				and `topic_name` = #{topicName}
			</if>
			<if test="dbNodeId != null and dbNodeId !=''" >
				and `db_node_id` = #{dbNodeId}
			</if>
			<if test="nodeType != null and nodeType !=''" >
				and `node_type` = #{nodeType}
			</if>
			<if test="ip != null and ip !=''" >
				and `ip` = #{ip}
			</if>
			<if test="dbName != null and dbName !=''" >
				and `db_name` = #{dbName}
			</if>
			<if test="tbName != null and tbName !=''" >
				and `tb_name` = #{tbName}
			</if>
			<if test="readOnly != null and readOnly !=''" >
				and `read_only` = #{readOnly}
			</if>
			<if test="minId != null and minId !=''" >
				and `min_id` = #{minId}
			</if>
			<if test="insertBy != null and insertBy !=''" >
				and `insert_by` = #{insertBy}
			</if>
			<if test="insertTime != null and insertTime !=''" >
				and `insert_time` = #{insertTime}
			</if>
			<if test="updateBy != null and updateBy !=''" >
				and `update_by` = #{updateBy}
			</if>
			<if test="updateTime != null and updateTime !=''" >
				and `update_time` = #{updateTime}
			</if>
			<if test="isActive != null and isActive !=''" >
				and `is_active` = #{isActive}
			</if>
			<if test="lockVersion != null and lockVersion !=''" >
				and `lock_version` = #{lockVersion}
			</if>
			<if test="metaUpdateTime != null and metaUpdateTime !=''" >
				and `meta_update_time` = #{metaUpdateTime}
			</if>

			<if test="updateTimeStart != null and updateTimeStart !=''" >
				and update_time >= #{updateTimeStart}
			</if>
			<if test="updateTimeEnd != null and updateTimeEnd !=''" >
				and update_time <![CDATA[ <= ]]> #{updateTimeEnd}
			</if>
			<if test="insertTimeStart != null and insertTimeStart !=''" >
				and insert_time >= #{insertTimeStart}
			</if>
			<if test="insertTimeEnd != null and insertTimeEnd !=''" >
				and insert_time <![CDATA[ <= ]]> #{insertTimeEnd}
			</if>

			<if test="distributeType == 1" >
				and topic_name != ''
			</if>
			<if test="distributeType == 2" >
				and topic_name = null or topic_name = ''
			</if>
			<if test="distributeType == 3" >
				and topic_name ='MQ_NEED_DELETE_1111111'
			</if>
		</where>
	</select>

</mapper>
